{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","js/enemy.js","js/player.js","js/tests.js"],"names":[],"mappings":"AAAA;;;;;;ACAA,IAAI,KAAK,GAAG,SAAR,KAAK,GAAc;AACtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,KAAI,CAAC,GAAG,GAAG,UAAS,GAAG,EAAE;AACxB,MAAI,SAAS,GAAG,GAAG,CAAC;AACpB,SAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;EAC7C,CAAC;CACF,CAAC;qBACa,KAAK;;;;;;;;;ACPpB,IAAI,MAAM,GAAG,SAAT,MAAM,GAAc;AACvB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,KAAI,CAAC,GAAG,GAAG,UAAS,GAAG,EAAE;AACxB,MAAI,SAAS,GAAG,GAAG,CAAC;AACpB,SAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;EAC7C,CAAC;CACF,CAAC;qBACa,MAAM;;;;;;;;sBCPF,UAAU;;;;qBACX,SAAS;;;;AAE3B,AAAC,CAAA,YAAW;AACV,cAAY,CAAC;;AAEf,UAAQ,CAAC,iBAAiB,EAAE,YAAW;;AAEpC,cAAU,CAAE,YAAW;AACtB,YAAM,CAAC,CAAC,GAAG,yBAAY,CAAC;KACxB,CAAC,CAAC;;AAEH,YAAQ,CAAC,mBAAmB,EAAE,YAAW;AACxC,QAAE,CAAC,qCAAqC,EAAE,YAAW;AACpD,cAAM,CAAC,CAAC,+BAAkB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;OAC3C,CAAC,CAAC;KACH,CAAC,CAAC;;AAEH,YAAQ,CAAC,kBAAkB,EAAE,YAAW;AACrC,QAAE,CAAC,uCAAuC,EAAE,YAAW;AACrD,cAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;OACjC,CAAC,CAAC;KACJ,CAAC,CAAC;;;;;;;;GASN,CAAC,CAAC;;AAEH,UAAQ,CAAC,gBAAgB,EAAE,YAAW;;AAEnC,cAAU,CAAE,YAAW;AACtB,YAAM,CAAC,CAAC,GAAG,wBAAW,CAAC;KACvB,CAAC,CAAC;;AAEH,YAAQ,CAAC,kBAAkB,EAAE,YAAW;AACvC,QAAE,CAAC,oCAAoC,EAAE,YAAW;AACnD,cAAM,CAAC,CAAC,8BAAiB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;OAC1C,CAAC,CAAC;KACH,CAAC,CAAC;;AAEH,YAAQ,CAAC,kBAAkB,EAAE,YAAW;AACrC,QAAE,CAAC,uCAAuC,EAAE,YAAW;AACrD,cAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;OACjC,CAAC,CAAC;KACJ,CAAC,CAAC;;AAEH,YAAQ,CAAC,qBAAqB,EAAE,YAAW;AACzC,QAAE,CAAC,2CAA2C,EAAE,YAAW;AACzD,SAAC,CAAC,GAAG,EAAE,CAAC;AACR,cAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;OACpC,CAAC,CAAA;KACH,CAAC,CAAC;GAEN,CAAC,CAAC;CAIF,CAAA,EAAE,CAAE","file":"tests.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","let Enemy = function() {\n\tthis.health = 1000;\n\tthis.hit = function(num) {\n\t\tlet hitPoints = num;\n\t\treturn this.health = this.health - hitPoints;\n\t};\n};\nexport default Enemy;","let Player = function() {\n\tthis.health = 1000;\n\tthis.hit = function(num) {\n\t\tlet hitPoints = num;\n\t\treturn this.health = this.health - hitPoints;\n\t};\n};\nexport default Player;","import Player from './player';\nimport Enemy from './enemy';\n\n(function() {\n  'use strict';\n\ndescribe('About My Player', function() {\n\n  \tbeforeEach( function() {\n  \t\twindow.x = new Player();\n  \t});\n\n  \tdescribe('creating a player', function() {\n  \t\tit('should create an instance of player', function() {\n  \t\t\texpect(x instanceof Player).to.equal(true);\n  \t\t});\n  \t});\n\n  \tdescribe('my player health', function() {\n      it('should have full health upon creation', function() {\n        expect(x.health).to.equal(1000);\n      });\n    });\n\n    // describe('player taking damage', function() {\n    //   it('should lower the score, after getting hit', function() {\n    //     x.hit();\n    //     expect(x.health).to.be.below(1000);\n    //   })\n    // });\n\n});\n\ndescribe('About My Enemy', function() {\n\n  \tbeforeEach( function() {\n  \t\twindow.x = new Enemy();\n  \t});\n\n  \tdescribe('creating a enemy', function() {\n  \t\tit('should create an instance of enemy', function() {\n  \t\t\texpect(x instanceof Enemy).to.equal(true);\n  \t\t});\n  \t});\n\n  \tdescribe('the enemy health', function() {\n      it('should have full health upon creation', function() {\n        expect(x.health).to.equal(1000);\n      });\n    });\n\n    describe('enemy taking damage', function() {\n      it('should lower the score, after getting hit', function() {\n        x.hit();\n        expect(x.health).to.be.below(1000);\n      })\n    });\n\n});\n\n  \n\n}());"]}